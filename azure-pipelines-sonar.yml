# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

resources:
  pipelines:
    - pipeline: IATec.Standard.WebUI.Angular.Storybook
      source: IATec.Standard.WebUI.Angular.Storybook
      trigger:
        branches:
          include:
            - main

pool:
  name: IATec-Builds-Agents-Linux
  demands: java

variables:
  - group: nuget-credentials

steps:
  - task: Bash@3
    displayName: 'Rename .npmrc.pipeline to .npmrc'
    inputs:
      targetType: 'inline'
      script: 'mv .npmrc.pipeline .npmrc'

  - task: replacetokens@6
    displayName: 'Replace variables in .npmrc'
    inputs:
      targetFiles: '.npmrc'
      encoding: 'auto'
      writeBOM: true
      actionOnMissing: 'warn'
      keepToken: false
      tokenPrefix: '#{'
      tokenSuffix: '}#'

  - task: NodeTool@0
    displayName: 'Install Node.js'
    inputs:
      versionSpec: '20.x'

  - task: Npm@1
    displayName: 'Install dependencies'
    inputs:
      command: 'install'

  - task: Npm@1
    displayName: 'Run build'
    inputs:
      command: 'custom'
      customCommand: 'run build'

  - task: Npm@1
    displayName: 'Run tests'
    inputs:
      command: custom
      workingDir: ''
      verbose: false
      customCommand: 'run test-headless'
    continueOnError: true

  - task: SonarQubePrepare@7
    displayName: 'Prepare analysis on SonarQube'
    inputs:
      SonarQube: 'IATec.Core.Logs Connection'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'IATec.Standard.WebUI.Angular'
      cliProjectName: 'IATec.Standard.WebUI.Angular'
      cliSources: '.'
      extraProperties: |
        sonar.projectBaseDir=$(System.DefaultWorkingDirectory)/
        sonar.javascript.lcov.reportPaths=$(Build.SourcesDirectory)/coverage/lcov.info

  - task: SonarQubeAnalyze@7
    displayName: 'Run Code Analysis'

  - task: SonarQubePublish@7
    displayName: 'Publish Quality Gate Result'
    inputs:
      pollingTimeoutSec: '300'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFiles: '$(Build.SourcesDirectory)/TESTS-*.xml'

  - task: PublishCodeCoverageResults@2
    displayName: 'Publish code coverage'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(Build.SourcesDirectory)/coverage/**/*cobertura-coverage.xml'
